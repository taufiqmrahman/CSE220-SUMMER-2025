//task1

public static void mostWater( Integer[] height ){

        int len = height.length;
        int max =0;
        for(int i=1; i<len+1;i++){
            int area =0;
            for (int j=0; j< len;j++ ){
                area = height[j] *(j-i);
                if(area>max){
                    max = area;
                }
            }
        }
        System.out.println(max);

    }

//task2

public static Integer rowRotation( Integer examWeek, String[][] matrix ){

        
        int length = matrix.length;
        int rotation = (examWeek % length)-1;
        int count = length-1;

        for(int i=0; i<count;i++){
            String [] temp = matrix[i];
            matrix[i] = matrix[count];
            matrix[count--] = temp;
        }

        int end = rotation-1; 
        for(int i=0; i<end; i++){
            String[] temp = matrix[i];
            matrix[i] = matrix[end];
            matrix[end--] = temp;
        }

        int end1 = matrix.length-1;
        for(int i = rotation;i<end1;i++){
            String [] temp = matrix[i];
            matrix[i] = matrix[end1];
            matrix[end1--] = temp;
        }    
        Arr.print2D(matrix);
        for(int i=0;i<length;i++){
            for(int j=0; j<matrix[0].length;j++){
                if(matrix[i][j].equals("AA")){
                    return j+1;
                }
            }
        }
       
        return null;
    }

//task3

 public static Integer[][] compressMatrix( Integer[][] matrix ){

        
        int row = matrix.length;
        int col = matrix[0].length;
        Integer ans [][] = new Integer [row/2] [col/2];
        int count =0;
        int count2 =0;
        for (int i=0; i<row;i= i+2){
            for(int j=0;j<col; j=j+2){
                int sum = matrix[i][j] + matrix [i+1][j] + matrix [i][j+1] + matrix [i+1] [j+1];
                ans [count][count2++] = sum;
            }
            count++;
            count2 =0;
        }

        return ans;
    }

//task4

 public static void playGame( Integer[][] arena ){
        
        int sum =0;
        int row = arena.length;
        int col = arena[0].length;

        for(int i=0; i<row;i++){
            for(int j=0;j<col;j++){
                if(arena[i][j] % 50 == 0 && arena[i][j] != 0){
                    
                    if(i-1 >= 0){
                        if(arena[i-1][j] == 2){
                             sum+=2;
                        }  
                    } 
                    if(i+1 < row ){
                        if(arena[i+1][j] == 2){
                             sum+=2;
                        }
                    } 
                    if(j-1 >= 0 ){
                        if(arena[i][j-1] == 2){
                             sum+=2;
                        }
                    } 
                    
                    if(j+1 < col) {
                        if(arena[i][j+1] == 2){
                             sum+=2;
                        }
                    }
                }
            }
        }
        if(sum > 10){
            System.out.println("Points Gained: " + sum + ". Your team has survived the game.");
        }
        else{
            System.out.println("Points Gained: " + sum + ". Your team is out.");
        }
        
       
    }